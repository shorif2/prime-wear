---
import CardAction from "./CardAction";

const productData = Astro.props.productData;
const { product, category, images, variants, relatedProducts } =
  productData || {};

const { name, price, discountedPrice, metaDescription } = product;
---

<main
  class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 grid grid-cols-1 md:grid-cols-2 gap-6 md:gap-10"
>
  <div>
    <div
      class="bg-gray-50 border rounded-md relative flex justify-center items-center"
    >
      <img
        id="main-product-image"
        src={images[0].url}
        alt="product"
        class="w-full max-w-xs sm:max-w-sm md:w-96 mx-auto cursor-zoom-in object-contain aspect-square"
      />
    </div>
    <!-- Lightbox overlay and modal -->
    <div id="image-overlay" class="image-overlay" style="display:none;">
      <span id="close-overlay" class="close-overlay">&times;</span>
      <img
        id="full-image"
        class="full-image"
        src={images[0].url}
        alt="Full product"
      />
    </div>
    <div class="grid grid-cols-4 sm:grid-cols-8 gap-2 sm:gap-4 mt-4">
      {
        images?.map((image: any, idx: number) => (
          <Fragment key={image.id}>
            <img
              src={image.url}
              alt="product2"
              class="w-16 sm:w-20 cursor-pointer border bg-gray-100 rounded-md thumbnail-image object-cover aspect-square"
              data-image={image.url}
              data-index={idx}
            />
          </Fragment>
        ))
      }
    </div>
  </div>
  <div>
    <h2 class="text-lg sm:text-xl font-medium uppercase mb-2">{name}</h2>
    <div class="flex items-center mb-4">
      <div class="flex gap-1 text-sm text-yellow-400">
        <span><i class="fa-solid fa-star"></i></span>
        <span><i class="fa-solid fa-star"></i></span>
        <span><i class="fa-solid fa-star"></i></span>
        <span><i class="fa-solid fa-star"></i></span>
        <span><i class="fa-solid fa-star"></i></span>
      </div>
      <div class="text-xs text-gray-500 ml-3">(150 Reviews)</div>
    </div>
    <div class="space-y-2">
      <p class="text-gray-800 font-semibold space-x-2">
        <span>Availability: </span>
        <span class="text-green-600">In Stock</span>
      </p>
      <p class="space-x-2">
        <span class="text-gray-800 font-semibold">Category: </span>
        <span class="text-gray-600">{category?.name}</span>
      </p>
      <p class="space-x-2">
        <span class="text-gray-800 font-semibold">SKU: </span>
        <span class="text-gray-600">BE45VGRT</span>
      </p>
    </div>
    <div class="flex items-baseline mb-1 space-x-2 font-roboto mt-4">
      <p class="text-lg sm:text-xl text-primary font-semibold">
        ${discountedPrice}
      </p>
      <p class="text-sm sm:text-base text-gray-400 line-through">${price}</p>
    </div>

    <p class="mt-4 text-gray-600 text-sm sm:text-base">
      {metaDescription}
    </p>

    <CardAction
      product={{
        id: product?.id,
        name: product?.name,
        price: product?.discountedPrice || product?.price,
        imageSrc: images?.[0]?.url,
        slug: product?.slug,
        variants: variants,
      }}
      client:load
    />
    <!-- social icon -->
    <div class="flex gap-3 mt-4">
      <a
        href="#"
        class="text-gray-400 hover:text-gray-500 h-8 w-8 rounded-full border border-gray-300 flex items-center justify-center"
      >
        <i class="fa-brands fa-facebook-f"></i>
      </a>
      <a
        href="#"
        class="text-gray-400 hover:text-gray-500 h-8 w-8 rounded-full border border-gray-300 flex items-center justify-center"
      >
        <i class="fa-brands fa-twitter"></i>
      </a>
      <a
        href="#"
        class="text-gray-400 hover:text-gray-500 h-8 w-8 rounded-full border border-gray-300 flex items-center justify-center"
      >
        <i class="fa-brands fa-instagram"></i>
      </a>
    </div>
  </div>
</main>

<style>
  .no-spinner::-webkit-outer-spin-button,
  .no-spinner::-webkit-inner-spin-button {
    -webkit-appearance: none;
  }
  .thumbnail-image.selected {
    box-shadow: 0 0 0 2px #7b808a;
    border-color: #f9fafb;
  }
  .image-overlay {
    display: flex;
    align-items: center;
    justify-content: center;
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(0, 0, 0, 0.8);
    z-index: 1000;
    transition: opacity 0.2s;
  }
  .full-image {
    max-width: 90vw;
    max-height: 90vh;
    border-radius: 8px;
    box-shadow: 0 4px 32px rgba(0, 0, 0, 0.3);
  }
  .close-overlay {
    position: absolute;
    top: 32px;
    right: 48px;
    color: #fff;
    font-size: 2.5rem;
    font-weight: bold;
    cursor: pointer;
    z-index: 1010;
    user-select: none;
    transition: color 0.2s;
  }
  .close-overlay:hover {
    color: #e5e7eb;
  }
  .zoom-image {
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    cursor: zoom-in;
  }
  .zoom-image:hover {
    transform: scale(1.5);
    z-index: 10;
  }
  @media (max-width: 768px) {
    .image-overlay .full-image {
      max-width: 98vw;
      max-height: 70vh;
    }
    .close-overlay {
      top: 16px;
      right: 16px;
      font-size: 2rem;
    }
  }
</style>

<script type="module" is:inline>
  const mainImage = document.getElementById("main-product-image");
  const thumbnails = document.querySelectorAll(".thumbnail-image");
  thumbnails.forEach((thumb, idx) => {
    thumb.addEventListener("click", function () {
      mainImage.src = this.dataset.image;
      thumbnails.forEach((t) => t.classList.remove("selected"));
      this.classList.add("selected");
    });
  });
  // Set initial selected
  if (thumbnails[0]) thumbnails[0].classList.add("selected");

  // Lightbox logic
  const overlay = document.getElementById("image-overlay");
  const fullImage = document.getElementById("full-image");
  const closeOverlay = document.getElementById("close-overlay");
  mainImage.addEventListener("click", function () {
    fullImage.src = mainImage.src;
    overlay.style.display = "flex";
  });
  closeOverlay.addEventListener("click", function () {
    overlay.style.display = "none";
  });
  overlay.addEventListener("click", function (e) {
    if (e.target === overlay) overlay.style.display = "none";
  });
  // Update full image on thumbnail click
  thumbnails.forEach((thumb) => {
    thumb.addEventListener("click", function () {
      if (overlay.style.display === "flex") {
        fullImage.src = this.dataset.image;
      }
    });
  });
</script>
